<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.redhat.insights</groupId>
  <artifactId>runtimes-agent</artifactId>
  <version>1.0.3-SNAPSHOT</version>

  <name>Red Hat Insights Java Agent</name>
  <description>Red Hat Insights Java Agent</description>
  <url>https://github.com/RedHatInsights/insights-java-agent</url>
  <inceptionYear>2023</inceptionYear>

  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Benjamin Evans</name>
      <email>beevans@redhat.com</email>
      <organization>Red Hat</organization>
      <organizationUrl>https://www.redhat.com/</organizationUrl>
    </developer>
    <developer>
      <id>ebaron</id>
      <name>Elliott Baron</name>
      <email>ebaron@redhat.com</email>
      <organization>Red Hat</organization>
      <organizationUrl>https://www.redhat.com/</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/RedHatInsights/insights-java-agent.git</connection>
    <developerConnection>scm:git:ssh://github.com:RedHatInsights/insights-java-agent.git</developerConnection>
    <url>http://github.com/RedHatInsights/insights-java-agent/tree/main</url>
  </scm>

  <properties>
    <!--    <maven.compiler.release>8</maven.compiler.release>-->
    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <skip.spotless>false</skip.spotless>

    <!-- Core dependencies versions -->
    <runtimes.java.api.version>2.0.4</runtimes.java.api.version>
    <apache.httpclient.version>4.5.14</apache.httpclient.version>
    <apache.httpcore.version>4.4.16</apache.httpcore.version>
    <apache.httpmime.version>4.5.14</apache.httpmime.version>
    <org.slf4j.version>2.0.7</org.slf4j.version>

    <!-- Test libraries versions -->
    <junit.version>5.9.2</junit.version>
    <mockito.version>4.11.0</mockito.version>
    <byte-buddy.version>1.14.0</byte-buddy.version>
    <awaitility.version>4.2.0</awaitility.version>

    <!-- Plugins versions -->
    <maven-assembly-plugin.version>3.5.0</maven-assembly-plugin.version>
    <google-java-format.version>1.7</google-java-format.version>
    <spotless-maven-plugin.version>2.29.0</spotless-maven-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M9</maven-surefire-plugin.version>
    <surefire-tree-reporter.version>1.2.1</surefire-tree-reporter.version>
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
    <maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
    <maven-install-plugin.version>3.1.0</maven-install-plugin.version>
    <maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
    <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
    <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
    <maven-javadoc-plugin.version>3.6.2</maven-javadoc-plugin.version>
    <jreleaser-maven-plugin.version>1.9.0</jreleaser-maven-plugin.version>

    <shade.prefix>com.redhat.insights.agent.shaded</shade.prefix>
  </properties>

  <dependencyManagement>
    <dependencies>

      <!-- Core dependencies -->

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>runtimes-java-api</artifactId>
        <version>${runtimes.java.api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${apache.httpclient.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore</artifactId>
        <version>${apache.httpcore.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpmime</artifactId>
        <version>${apache.httpmime.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${org.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${org.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${org.slf4j.version}</version>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Byte Buddy is used for testing the agent -->
      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy</artifactId>
        <version>${byte-buddy.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy-agent</artifactId>
        <version>${byte-buddy.version}</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>runtimes-java-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
    <!-- TODO remove this SLF4J provider. We should just depend on what SLF4J provider is available in the attached
        application's classpath at runtime, if any. -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>jdk.tools</groupId>
      <artifactId>jdk.tools</artifactId>
      <version>jdk1.8.0</version>
      <scope>system</scope>
      <systemPath>${toolsjar}</systemPath>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy-agent</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.google.googlejavaformat</groupId>
          <artifactId>google-java-format</artifactId>
          <version>${google-java-format.version}</version>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludedGroups>IntegrationTest</excludedGroups>
          <!-- config for maven-surefire-junit5-tree-reporter -->
          <reportFormat>plain</reportFormat>
          <consoleOutputReporter>
            <disable>true</disable>
          </consoleOutputReporter>
          <statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter">
            <printStacktraceOnError>true</printStacktraceOnError>
            <printStacktraceOnFailure>true</printStacktraceOnFailure>
            <printStdoutOnError>true</printStdoutOnError>
            <printStdoutOnFailure>true</printStdoutOnFailure>
            <printStdoutOnSuccess>false</printStdoutOnSuccess>
            <printStderrOnError>true</printStderrOnError>
            <printStderrOnFailure>true</printStderrOnFailure>
            <printStderrOnSuccess>false</printStderrOnSuccess>
          </statelessTestsetInfoReporter>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>me.fabriciorby</groupId>
            <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
            <version>${surefire-tree-reporter.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.version}</version>
        <configuration></configuration>
        <executions>
          <execution>
            <id>shade-jar-with-dependencies</id>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <useDependencyReducedPomInJar>false</useDependencyReducedPomInJar>
              <createSourcesJar>true</createSourcesJar>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>shaded</shadedClassifierName>
              <relocations>
                <relocation>
                  <pattern>com.redhat.insights</pattern>
                  <shadedPattern>${shade.prefix}</shadedPattern>
                  <excludes>
                    <exclude>com.redhat.insights.agent.**</exclude>
                  </excludes>
                </relocation>
                <relocation>
                  <pattern>org.apache</pattern>
                  <shadedPattern>${shade.prefix}.org.apache</shadedPattern>
                  <excludes>
                    <exclude>org.apache.catalina.**</exclude>
                  </excludes>
                </relocation>
                <relocation>
                  <pattern>org.slf4j</pattern>
                  <shadedPattern>${shade.prefix}.org.slf4j</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>java.util.logging.Logger</pattern>
                  <shadedPattern>${shade.prefix}.ShadeLogger</shadedPattern>
                  <excludes>
                    <exclude>${shade.prefix}.ShadeLogger</exclude>
                  </excludes>
                </relocation>
                <relocation>
                  <pattern>org.wildfly.common</pattern>
                  <shadedPattern>${shade.prefix}.org.wildfly.common</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.wildfly.security</pattern>
                  <shadedPattern>${shade.prefix}.org.wildfly.security</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.jboss</pattern>
                  <shadedPattern>${shade.prefix}.org.jboss</shadedPattern>
                  <excludes>
                    <exclude>org.jboss.modules.*</exclude>
                    <exclude>org.jboss.as.version.*</exclude>
                    <exclude>org.jboss.as.version.ProductConfig</exclude>
                  </excludes>
                </relocation>
                <relocation>
                  <pattern>com.fasterxml.jackson</pattern>
                  <shadedPattern>${shade.prefix}.com.fasterxml.jackson</shadedPattern>
                </relocation>
                <!-- TODO Remove the following relocations once this bug is fixed:
                                  https://issues.apache.org/jira/browse/MSHADE-406 -->
                <relocation>
                  <pattern>META-INF/versions/9/</pattern>
                  <shadedPattern>META-INF/versions/9/${shade.prefix}/</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>META-INF/versions/11/</pattern>
                  <shadedPattern>META-INF/versions/11/${shade.prefix}/</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>META-INF/versions/17/</pattern>
                  <shadedPattern>META-INF/versions/17/${shade.prefix}/</shadedPattern>
                </relocation>
              </relocations>
              <!-- TODO Revisit the following filters once this bug is fixed:
                  https://issues.apache.org/jira/browse/MSHADE-406 -->
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>META-INF/MANIFEST.MF</exclude>
                    <exclude>**/module-info.class</exclude>
                    <exclude>META-INF/DEPENDENCIES</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Premain-Class>com.redhat.insights.agent.AgentMain</Premain-Class>
                    <Agent-Class>com.redhat.insights.agent.AgentMain</Agent-Class>
                    <Multi-Release>true</Multi-Release>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"></transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer"></transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                  <addHeader>false</addHeader>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <!--        <version>${spotless-maven-plugin.version}</version>-->
        <configuration>
          <skip>${skip.spotless}</skip>
          <!-- optional: limit format enforcement to just the files changed by this feature branch -->
          <ratchetFrom>origin/main</ratchetFrom>
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <include>*.md</include>
                <include>.gitignore</include>
              </includes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace></trimTrailingWhitespace>
              <endWithNewline></endWithNewline>
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>4</spacesPerTab>
              </indent>
            </format>
          </formats>
          <!-- define a language-specific format -->
          <java>
            <!-- no need to specify files, inferred automatically, but you can if you want -->

            <!-- apply a specific flavor of google-java-format and reflow long strings -->
            <googleJavaFormat>
              <version>${google-java-format.version}</version>
              <style>GOOGLE</style>
              <!--              <reflowLongStrings>true</reflowLongStrings>-->
              <!--              <groupArtifact>com.google.googlejavaformat:google-java-format</groupArtifact>-->
            </googleJavaFormat>

            <!-- make sure every file has the following copyright header.
			           optionally, Spotless can set copyright years by digging
			           through git history (see "license" section below) -->
            <licenseHeader>
              <content>/* Copyright (C) Red Hat $YEAR */</content>
              <!-- or <file>${project.basedir}/license-header</file> -->
            </licenseHeader>
          </java>
          <pom>
            <includes>
              <include>pom.xml</include>
            </includes>
            <sortPom></sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>compile</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <archive>
                <manifest></manifest>
                <manifestEntries>
                  <Premain-Class>com.redhat.insights.agent.AgentMain</Premain-Class>
                  <Agent-Class>com.redhat.insights.agent.AgentMain</Agent-Class>
                </manifestEntries>
              </archive>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
              <attach>true</attach>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <profiles>
    <profile>
      <id>mac</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <toolsjar>${java.home}/../lib/tools.jar</toolsjar>
      </properties>
    </profile>
    <profile>
      <id>linux</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <os>
          <family>linux</family>
        </os>
      </activation>
      <properties>
        <toolsjar>${java.home}/../lib/tools.jar</toolsjar>
      </properties>
    </profile>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>integration</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludedGroups>none</excludedGroups>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jreleaser</groupId>
            <artifactId>jreleaser-maven-plugin</artifactId>
            <version>${jreleaser-maven-plugin.version}</version>
            <inherited>false</inherited>
            <configuration>
              <jreleaser>
                <signing>
                  <active>ALWAYS</active>
                  <armored>true</armored>
                </signing>
                <deploy>
                  <maven>
                    <nexus2>
                      <maven-central>
                        <active>ALWAYS</active>
                        <url>https://oss.sonatype.org/service/local</url>
                        <snapshotUrl>https://oss.sonatype.org/content/repositories/snapshots/</snapshotUrl>
                        <closeRepository>true</closeRepository>
                        <releaseRepository>true</releaseRepository>
                        <stagingRepositories>target/staging-deploy</stagingRepositories>
                      </maven-central>
                    </nexus2>
                  </maven>
                </deploy>
              </jreleaser>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>publication</id>
      <properties>
        <altDeploymentRepository>local::file:./target/staging-deploy</altDeploymentRepository>
      </properties>
      <build>
        <defaultGoal>deploy</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <attach>true</attach>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
                <configuration>
                  <attach>true</attach>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
